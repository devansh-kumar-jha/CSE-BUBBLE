//! CS220 Assignment 7
//! Devansh Kumar Jha 200318
//! Shivang Pandey 200941

32'b001000_00110_11011_0000000000001010;               // lw $27, 10($6)  $s3 = 10 (main)
32'b000001_00110_11010_0000000000001011;               // addi $26, $6, 11  $s2 = 11
32'b000001_00110_01001_0000000000000010;               // addi $9, $6, 2
32'b010010_00000000000000000000100000;                 // jal 32
32'b010010_00000000000000000000001001;                 // jal 9
32'b000001_00110_01001_0000000000000110;               // addi $9, $6, 6
32'b010010_00000000000000000000100000;                 // jal 32
32'b000001_00110_01000_0000000000000010;               // addi $8, $6, 2
32'b010101_00000000000000000000000000;                 // syscall
32'b000001_00110_10001_0000000000000000;               // addi $17, $6, 0 (bubble_sort)
32'b000000_11011_10001_10010_00000_000001;             // sub $18, $27, $17 (outer)
32'b000001_10010_10010_1111111111111111;               // addi $18, $18, -1
32'b000001_00110_10011_0000000000000000;               // addi $19, $6, 0
32'b000000_10011_10010_11001_00000_000001;             // sub $25, $19, $18
32'b010011_11001_00110_11111_00000_000000;             // slt $31, $25, $6
32'b001010_00110_11111_0000000000001101;               // beq $31, $6, 13
32'b001101_00110_11001_0000000000001100;               // bgte $25, $6, 12
32'b000111_00000_10011_10100_00000_000000;             // sll $20, $19, 0 (inner)
32'b000000_10100_11010_10100_00000_000000;             // add $20, $20, $26
32'b000001_10100_10101_0000000000000001;               // addi $21, $20, 1
32'b001000_10100_10110_0000000000000000;               // lw $22, 0($20)
32'b001000_10101_10111_0000000000000000;               // lw $23, 0($21)
32'b000000_10110_10111_11000_00000_000001;             // sub $24, $22, $23
32'b010011_11000_00110_11111_00000_000000;             // slt $31, $24, $6
32'b001011_00110_11111_0000000000000010;               // bne $31, $6, 2
32'b001001_10101_10110_0000000000000000;               // sw $22, 0($21)
32'b001001_10100_10111_0000000000000000;               // sw $23, 0($20)
32'b000001_10011_10011_0000000000000001;               // addi $19, $19, 1 (inend)
32'b001011_10010_10011_1111111111110100;               // bne $19, $18, -12
32'b000001_10001_10001_0000000000000001;               // addi $17, $17, 1 (oend)
32'b001011_11011_10001_1111111111101011;               // bne $17, $27, -21
32'b010001_00000000000000000000010000;                 // jr $16 (end1)
32'b000001_00110_01000_0000000000000111;               // addi $8, $6, 7 (print)
32'b000001_01001_01010_0000000000000000;               // addi $10, $9, 0
32'b001000_01010_01010_0000000000000000;               // lw $10, 0($10)
32'b000001_01001_01011_0000000000000001;               // addi $11, $9, 1
32'b001000_01011_01011_0000000000000000;               // lw $11, 0($11)
32'b000001_01001_01100_0000000000000010;               // addi $12, $9, 2
32'b001000_01100_01100_0000000000000000;               // lw $12, 0($12)
32'b000001_01001_01101_0000000000000011;               // addi $13, $9, 3
32'b001000_01101_01101_0000000000000000;               // lw $13, 0($13)
32'b010101_00000000000000000000000000;                 // syscall
32'b000001_00110_10010_0000000000000000;               // addi $18, $6, 0
32'b000001_11010_10001_0000000000000000;               // addi $17, $26, 0
32'b000001_00110_01000_0000000000000001;               // addi $8, $6, 1 (loop2)
32'b001000_10001_01010_0000000000000000;               // lw $10, 0($17)
32'b010101_00000000000000000000000000;                 // syscall
32'b000001_10010_10010_0000000000000001;               // addi $18, $18, 1
32'b000001_10001_10001_0000000000000001;               // addi $17, $17, 1
32'b001011_11011_10010_1111111111111010;               // bne $18, $27, -6
32'b010001_00000000000000000000010000;                 // jr $16 (end2)
